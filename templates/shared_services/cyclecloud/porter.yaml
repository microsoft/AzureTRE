---
schemaVersion: 1.0.0
name: tre-shared-service-cyclecloud
version: 0.5.6
description: "An Azure TRE Shared Service Template for Azure Cyclecloud"
registry: azuretre
dockerfile: Dockerfile.tmpl

credentials:
  - name: azure_tenant_id
    env: ARM_TENANT_ID
  - name: azure_subscription_id
    env: ARM_SUBSCRIPTION_ID
  - name: azure_client_id
    env: ARM_CLIENT_ID
  - name: azure_client_secret
    env: ARM_CLIENT_SECRET

parameters:
  - name: tre_id
    type: string
  - name: id
    type: string
    description: "An Id for this installation"
    env: id
  - name: azure_environment
    type: string
    default: "AzureCloud"
    description: "Used by Azure CLI to set the Azure environment"
  - name: tfstate_resource_group_name
    type: string
    description: "Resource group containing the Terraform state storage account"
  - name: tfstate_storage_account_name
    type: string
    description: "The name of the Terraform state storage account"
  - name: tfstate_container_name
    env: tfstate_container_name
    type: string
    default: "tfstate"
    description: "The name of the Terraform state storage container"
  - name: arm_use_msi
    env: ARM_USE_MSI
    type: boolean
    default: false
  - name: arm_environment
    env: ARM_ENVIRONMENT
    type: string
    default: "public"

outputs:
  - name: connection_uri
    type: string
    applyTo:
      - install
      - upgrade


mixins:
  - exec
  - terraform:
      clientVersion: 1.3.6
  - az:
      clientVersion: 2.37.0

install:
  - terraform:
      description: "Deploy Cyclecloud shared service"
      vars:
        tre_id: ${ bundle.parameters.tre_id }
        arm_client_id: ${ bundle.credentials.azure_client_id }
        arm_client_secret: ${ bundle.credentials.azure_client_secret }
        arm_tenant_id: ${ bundle.credentials.azure_tenant_id }
        arm_use_msi: ${ bundle.parameters.arm_use_msi }
        tre_resource_id: ${ bundle.parameters.id }
        arm_environment: ${ bundle.parameters.arm_environment }
      backendConfig:
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: ${ bundle.parameters.id }
      outputs:
        - name: connection_uri

upgrade:
  - terraform:
      description: "Update Cyclecloud shared service"
      vars:
        tre_id: ${ bundle.parameters.tre_id }
        arm_client_id: ${ bundle.credentials.azure_client_id }
        arm_client_secret: ${ bundle.credentials.azure_client_secret }
        arm_tenant_id: ${ bundle.credentials.azure_tenant_id }
        arm_use_msi: ${ bundle.parameters.arm_use_msi }
        tre_resource_id: ${ bundle.parameters.id }
        arm_environment: ${ bundle.parameters.arm_environment }
      backendConfig:
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: ${ bundle.parameters.id }
      outputs:
        - name: connection_uri

uninstall:
  - terraform:
      description: "Delete the Cyclecloud shared service"
      vars:
        tre_id: ${ bundle.parameters.tre_id }
        arm_client_id: ${ bundle.credentials.azure_client_id }
        arm_client_secret: ${ bundle.credentials.azure_client_secret }
        arm_tenant_id: ${ bundle.credentials.azure_tenant_id }
        arm_use_msi: ${ bundle.parameters.arm_use_msi }
        tre_resource_id: ${ bundle.parameters.id }
        arm_environment: ${ bundle.parameters.arm_environment }
      backendConfig:
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: ${ bundle.parameters.id }

start:
  - terraform:
      arguments:
        - "output"
      description: "Get resource ID from Terraform outputs"
      backendConfig:
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: ${ bundle.parameters.id }
      outputs:
        - name: azure_resource_id
  - az:
      description: "Set Azure Cloud Environment"
      arguments:
        - cloud
        - set
      flags:
        name: ${ bundle.parameters.azure_environment }
  - az:
      description: "Login to Azure"
      arguments:
        - login
      flags:
        identity:
        username: ${ bundle.credentials.azure_client_id }
  - az:
      description: "Start the VM"
      arguments:
        - vm
        - start
      flags:
        ids: ${ bundle.outputs.azure_resource_id }

stop:
  - terraform:
      arguments:
        - "output"
      description: "Get VM hostname and rg from Terraform outputs"
      backendConfig:
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: ${ bundle.parameters.id }
      outputs:
        - name: azure_resource_id
  - az:
      description: "Set Azure Cloud Environment"
      arguments:
        - cloud
        - set
      flags:
        name: ${ bundle.parameters.azure_environment }
  - az:
      description: "Login to Azure"
      arguments:
        - login
      flags:
        identity:
        username: ${ bundle.credentials.azure_client_id }
  - az:
      description: "Stop the VM"
      arguments:
        - vm
        - deallocate
      flags:
        ids: ${ bundle.outputs.azure_resource_id }
