---
schemaVersion: 1.0.0
name: tre-workspace-service-openai
version: 1.0.1
description: "An OpenAI workspace service"
registry: azuretre
dockerfile: Dockerfile.tmpl

credentials:
  - name: azure_tenant_id
    env: ARM_TENANT_ID
  - name: azure_subscription_id
    env: ARM_SUBSCRIPTION_ID
  - name: azure_client_id
    env: ARM_CLIENT_ID
  - name: azure_client_secret
    env: ARM_CLIENT_SECRET
parameters:
  - name: workspace_id
    type: string
  - name: tre_id
    type: string

  # the following are added automatically by the resource processor
  - name: id
    type: string
    description: "Resource ID"
    env: id
  - name: tfstate_resource_group_name
    type: string
    description: "Resource group containing the Terraform state storage account"
  - name: tfstate_storage_account_name
    type: string
    description: "The name of the Terraform state storage account"
  - name: tfstate_container_name
    env: tfstate_container_name
    type: string
    default: "tfstate"
    description: "The name of the Terraform state storage container"
  - name: arm_use_msi
    env: ARM_USE_MSI
    type: boolean
    default: false
  - name: arm_environment
    env: ARM_ENVIRONMENT
    type: string
    default: "public"
  - name: is_exposed_externally
    env: IS_EXPOSED_EXTERNALLY
    type: boolean
  - name: openai_model
    env: OPENAI_MODEL
    type: string

mixins:
  - exec
  - terraform:
      clientVersion: 1.3.6

outputs:
  - name: openai_fqdn
    type: string
    applyTo:
      - install
      - upgrade
  - name: openai_deployment_id
    type: string
    applyTo:
      - install
      - upgrade

install:
  - terraform:
      description: "Deploy OpenAI workspace service"
      vars:
        workspace_id: ${ bundle.parameters.workspace_id }
        tre_id: ${ bundle.parameters.tre_id }
        tre_resource_id: ${ bundle.parameters.id }
        arm_environment: ${ bundle.parameters.arm_environment }
        is_exposed_externally: ${ bundle.parameters.is_exposed_externally }
        openai_model: ${ bundle.parameters.openai_model }
      backendConfig:
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: tre-workspace-service-openai-${ bundle.parameters.id }
      outputs:
        - name: openai_fqdn
        - name: openai_deployment_id
upgrade:
  - terraform:
      description: "Upgrade OpenAI workspace service"
      vars:
        workspace_id: ${ bundle.parameters.workspace_id }
        tre_id: ${ bundle.parameters.tre_id }
        tre_resource_id: ${ bundle.parameters.id }
        arm_environment: ${ bundle.parameters.arm_environment }
        is_exposed_externally: ${ bundle.parameters.is_exposed_externally }
        openai_model: ${ bundle.parameters.openai_model }
      backendConfig:
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: tre-workspace-service-openai-${ bundle.parameters.id }
      outputs:
        - name: openai_fqdn
        - name: openai_deployment_id
uninstall:
  - terraform:
      description: "Tear down OpenAI workspace service"
      vars:
        workspace_id: ${ bundle.parameters.workspace_id }
        tre_id: ${ bundle.parameters.tre_id }
        tre_resource_id: ${ bundle.parameters.id }
        arm_environment: ${ bundle.parameters.arm_environment }
        is_exposed_externally: ${ bundle.parameters.is_exposed_externally }
        openai_model: ${ bundle.parameters.openai_model }
      backendConfig:
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: tre-workspace-service-openai-${ bundle.parameters.id }
